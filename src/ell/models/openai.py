import logging\nimport openai\nimport os\nfrom ell.configurator import config\n\nlogger = logging.getLogger(__name__)\n\ndef register_openai_models(client: openai.Client):\n    model_data = [\n        ('gpt-4-1106-preview', 'system'),\n        ('gpt-4-32k-0314', 'openai'),\n        ('text-embedding-3-large', 'system'),\n        ('gpt-4-0125-preview', 'system'),\n        ('babbage-002', 'system'),\n        ('gpt-4-turbo-preview', 'system'),\n        ('gpt-4o', 'system'),    \n        ('gpt-4o-2024-05-13', 'system'),\n        ('gpt-4o-mini-2024-07-18', 'system'),\n        ('gpt-4o-mini', 'system'),\n        ('gpt-4o-2024-08-06', 'system'),\n        ('gpt-3.5-turbo-0301', 'openai'),\n        ('gpt-3.5-turbo-0613', 'openai'),\n        ('tts-1', 'openai-internal'),\n        ('gpt-3.5-turbo', 'openai'),\n        ('gpt-3.5-turbo-16k', 'openai-internal'),    \n        ('davinci-002', 'system'),\n        ('gpt-3.5-turbo-16k-0613', 'openai'),\n        ('gpt-4-turbo-2024-04-09', 'system'),\n        ('gpt-3.5-turbo-0125', 'system'),\n        ('gpt-4-turbo', 'system'),\n        ('gpt-3.5-turbo-1106', 'system'),\n        ('gpt-3.5-turbo-instruct-0914', 'system'),\n        ('gpt-3.5-turbo-instruct', 'system'),\n        ('gpt-4-0613', 'openai'),\n        ('gpt-4', 'openai'),\n        ('gpt-4-0314', 'openai')\n    ]\n    for model_id, owned_by in model_data:\n        config.register_model(model_id, client)\n\ndef main() -> None:\n    default_client = None\n    try:\n        default_client = openai.Client()\n    except openai.OpenAIError as e:\n        default_client = openai.Client(api_key=os.environ.get(\