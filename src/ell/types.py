from typing import Callable, List, Optional, Dict, Any, Union\\\nimport sqlalchemy as sa\\\nimport datetime\\\nfrom ell.lstr import lstr\\\nfrom ell.util.dict_sync_meta import DictSyncMeta\\\n\\\n_lstr_generic = Union[str, lstr]\\\nOneTurn = Callable[[_lstr_generic], _lstr_generic]\\nMultiTurnLMP = Callable[..., List[Dict[str, str]]]\\nChatLMP = Callable[..., List[Dict[str, str]]]\\nInvocableLM = Callable[..., _lstr_generic]\\n\\\ndef utc_now() -> datetime.datetime:\"""\n    Returns the current UTC timestamp.\n    Serializes to ISO-8601.\n    \"""\n    return datetime.datetime.now(tz=datetime.timezone.utc)\\\n\\\n@dataclass\nclass Message(dict, metaclass=DictSyncMeta):\n    role: str\n    content: _lstr_generic\n\nMessageOrDict = Union[Message, Dict[str, str]]\n\nChat = List[Message]